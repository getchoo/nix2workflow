name: CI

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  eval:
    strategy:
      matrix:
        test: [lib, module]

    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      - uses: nixbuild/nix-quick-install-action@v26

      - name: generate matrix
        id: generate
        run: |
          cd test/${{ matrix.test }}
          set -e
          echo "matrix=$(nix eval --show-trace --json .#githubWorkflow.matrix)" >> "$GITHUB_OUTPUT"

      - name: save matrix
        uses: cloudposse/github-action-matrix-outputs-write@main
        with:
          matrix-step-name: ${{ github.job }}
          matrix-key: ${{ matrix.test }}
          outputs: |
            matrix: ${{ steps.generate.outputs.matrix }}

  read:
    needs: eval
    runs-on: ubuntu-latest

    outputs:
      result: ${{ steps.read.outputs.result }}

    steps:
      - name: read matrix
        uses: cloudposse/github-action-matrix-outputs-read@main
        id: read
        with:
          matrix-step-name: eval

  # would be nice to have another matrix for these but meh
  test-lib:
    needs: read

    strategy:
      matrix: ${{ fromJSON(fromJSON(needs.read.outputs.result).matrix.lib) }}

    runs-on: ${{ matrix.os }}

    name: build (${{ matrix.attr }})

    steps:
      - uses: actions/checkout@v4

      - name: setup qemu
        if: matrix.arch == 'aarch64'
        run: |
          sudo apt update -y
          sudo apt install -y qemu-user-static

      - name: install nix
        if: matrix.arch != 'aarch64'
        uses: nixbuild/nix-quick-install-action@v26

      - name: install nix (with aarch64)
        if: matrix.arch == 'aarch64'
        uses: nixbuild/nix-quick-install-action@v26
        with:
          nix_conf: "extra-platforms = aarch64-linux arm-linux"

      - name: build ${{ matrix.attr }}
        run: |
          cd test/lib
          nix build -L .#${{ matrix.attr }}

  test-module:
    needs: read

    strategy:
      matrix: ${{ fromJSON(fromJSON(needs.read.outputs.result).matrix.module) }}

    runs-on: ${{ matrix.os }}

    name: build (${{ matrix.attr }})

    steps:
      - uses: actions/checkout@v4

      - name: setup qemu
        if: matrix.arch == 'aarch64'
        run: |
          sudo apt update -y
          sudo apt install -y qemu-user-static

      - name: install nix
        if: matrix.arch != 'aarch64'
        uses: nixbuild/nix-quick-install-action@v26

      - name: install nix (with aarch64)
        if: matrix.arch == 'aarch64'
        uses: nixbuild/nix-quick-install-action@v26
        with:
          nix_conf: "extra-platforms = aarch64-linux arm-linux"

      - name: build ${{ matrix.attr }}
        run: |
          cd test/module
          nix build -L .#${{ matrix.attr }}
